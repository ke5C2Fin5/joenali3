(function(b) {
    b.pageless = function(c) {
        b.isFunction(c) ? c.call() : b.pageless.init(c)
    };
    b.pageless.settings = {
        currentPage: 1,
        pagination: ".pagination",
        url: location.href,
        params: {},
        distance: 100,
        loaderImage: "",
        marker: null,
        scrape: function(c) {
            return c
        }
    };
    b.pageless.loaderHtml = function() {
        return b.pageless.settings.loaderHtml || '<div id="pageless-loader" style="display:none;text-align:center;width:100%;"></div>'
    };
    b.pageless.init = function(c) {
        if (!b.pageless.settings.inited) {
            b.pageless.settings.inited = true;
            c && b.extend(b.pageless.settings, c);
            b.pageless.settings.pagination && b(b.pageless.settings.pagination).remove();
            b.pageless.startListener()
        }
    };
    b.pageless.isLoading = false;
    b.fn.pageless = function(c) {
        b.pageless.init(c);
        b.pageless.el = b(this);
        if (c.loader && b(this).find(c.loader).length) b.pageless.loader = b(this).find(c.loader);
        else {
            b.pageless.loader = b(b.pageless.loaderHtml());
            b(this).append(b.pageless.loader);
            c.loaderHtml || b("#pageless-loader .msg").html(c.loaderMsg)
        }
    };
    b.pageless.loading = function(c) {
        if (c === true) {
            b.pageless.isLoading = true;
            b.pageless.loader && b.pageless.loader.fadeIn("normal")
        } else {
            b.pageless.isLoading = false;
            b.pageless.loader && b.pageless.loader.fadeOut("normal")
        }
    };
    b.pageless.stopListener = function() {
        b(window).unbind(".pageless");
        b("#" + b.pageless.settings.loader).hide()
    };
    b.pageless.startListener = function() {
        b(window).bind("scroll.pageless", b.pageless.scroll);
        b("#" + b.pageless.settings.loader).show()
    };
    b.pageless.scroll = function() {
        if (b.pageless.settings.totalPages <= b.pageless.settings.currentPage) {
            b.pageless.stopListener();
            b.pageless.settings.afterStopListener && b.pageless.settings.afterStopListener.call()
        } else {
            var c = b(document).height() - b(window).scrollTop() - b(window).height();
            if (!b.pageless.isLoading && c < b.pageless.settings.distance) {
                b.pageless.loading(true);
                b.pageless.settings.currentPage++;
                b.extend(b.pageless.settings.params, {
                    page: b.pageless.settings.currentPage
                });
                b.pageless.settings.marker && b.extend(b.pageless.settings.params, {
                    marker: b.pageless.settings.marker
                });
                c = b.pageless.settings.url;
                c = c.split("#")[0];
                b.ajax({
                    url: c,
                    type: "GET",
                    dataType: "html",
                    data: b.pageless.settings.params,
                    success: function(e) {
                        e = b.pageless.settings.scrape(e);
                        b.pageless.loader ? b.pageless.loader.before(e) : b.pageless.el.append(e);
                        b.pageless.loading(false);
                        b.pageless.settings.complete && b.pageless.settings.complete.call()
                    }
                })
            }
        }
    }
})(jQuery);
